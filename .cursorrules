{
  "rules": {
    "go": {
      "imports": {
        "groupOrder": [
          "标准库",
          "第三方库",
          "项目内部包"
        ],
        "separateGroups": true,
        "description": "导入语句需要按照标准库、第三方库、项目内部包的顺序分组，并且每组之间需要空行分隔"
      },
      "formatting": {
        "indentSize": 4,
        "tabSize": 4,
        "useTabs": false,
        "maxLineLength": 120,
        "description": "使用4个空格进行缩进，不使用制表符，每行代码最大长度为120个字符"
      },
      "naming": {
        "package": "lowercase",
        "interface": "PascalCase",
        "struct": "PascalCase",
        "function": "PascalCase",
        "variable": "camelCase",
        "constant": "UPPER_CASE",
        "description": "包名使用小写字母，接口和结构体使用PascalCase命名法，函数使用PascalCase命名法，变量使用camelCase命名法，常量使用全大写字母"
      },
      "development": {
        "newRoute": {
          "steps": [
            {
              "step": 1,
              "title": "注册路由",
              "description": "在project-api/api目录的子目录中：\n1. 在route.go中向gin.Engine注册URL和处理函数的映射关系\n2. 在同目录下的handler.go中实现对应的处理函数\n3. 处理函数通过调用对应的GRPC接口实现功能\n4. 在project-api/pkg/model目录的子目录下定义URL请求和响应的结构体",
              "files": [
                "route.go",
                "handler.go",
                "pkg/model/*/*.go"
              ]
            },
            {
              "step": 2,
              "title": "GRPC接口",
              "description": "GRPC接口开发步骤：\n1. 在对应目录的/api/protoc目录下的proto文件中新增rpc接口\n2. 在proto文件同级目录下执行命令生成go文件：\n   protoc --go_out=./gen --go_opt=paths=source_relative --go-grpc_out=./gen --go-grpc_opt=paths=source_relative project_service.proto\n3. 将生成的go文件移动到project-grpc目录的对应子目录下，并修改package为所在目录名\n4. 在对应目录的service目录的子目录下实现grpc接口，通过调用DAO层接口实现功能",
              "files": [
                "api/protoc/*.proto",
                "service/*.go"
              ]
            },
            {
              "step": 3,
              "title": "DAO层",
              "description": "在对应目录下：\n1. 在repo目录中定义数据库操作接口\n2. 在dao目录中实现接口",
              "files": [
                "repo/*.go",
                "dao/*.go"
              ]
            }
          ],
          "description": "添加新路由的标准开发流程，包含路由注册、GRPC接口实现和DAO层开发三个步骤"
        }
      }
    },
    "general": {
      "trailingWhitespace": "trim",
      "insertFinalNewline": true,
      "trimTrailingWhitespace": true,
      "endOfLine": "lf",
      "description": "删除行尾空格，文件末尾需要有空行，使用LF作为行结束符"
    },
    "filePatterns": {
      "*.go": {
        "indentStyle": "space",
        "indentSize": 4,
        "description": "Go源文件使用4个空格进行缩进"
      },
      "*.yaml": {
        "indentStyle": "space",
        "indentSize": 2,
        "description": "YAML配置文件使用2个空格进行缩进"
      },
      "*.json": {
        "indentStyle": "space",
        "indentSize": 2,
        "description": "JSON文件使用2个空格进行缩进"
      }
    }
  }
} 